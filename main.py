# Определяем нашу функцию как seidel, которая принимает 3 аргумента
# как матрица A, решение и матрица B

def seidel(a, x, b):
    # Нахождение длины a(3)
    n = len(a)
    # цикл for 3 раза для вычисления x, y, z
    for j in range(0, n):
        # temp variable d to store b[j]
        d = b[j]

        # временная переменная d для хранения b[j]
        for i in range(0, n):
            if (j != i):
                d -= a[j][i] * x[i]
        # обновление значения нашего решения
        x[j] = d / a[j][j]
    # возвращаем наше обновленное решение
    return x


# int(input())введите как номер переменной для решения
n = 3
a = []
b = []
# исходное решение зависит от n(здесь n=3)

d1=1
k1=3

d2=2
k2=4

d3=3
k3=3

d4=4


x = [0, 0, 0]


a = [[d1*d1, d1, 1], [d2*d2, d2, 1], [d3*d3, d3, 1]]
b = [k1, k2, k3]
print(x)

# цикл выполняется m раз в зависимости от m значения ошибки
for i in range(0, 70):
    x = seidel(a, x, b)
    # каждый раз выводить обновленное решение
    print(x)


rez = d4*d4*x[0] + d4*x[1] + x[2]

#rez = d4*d4*x[2] + d4*x[1] + x[0]

#rez = x[0]*x[0] + x[1] + x[2]


print("у=", rez)